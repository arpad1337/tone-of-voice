
version: '3.8'
services:
  tone_of_voice_db:
    image: postgres:15.5-alpine3.19
    restart: always
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=tone_of_voice_db_dev_user
      - POSTGRES_PASSWORD=Fd0kjmjYjzAUXx3C
      - POSTGRES_DB=tone_of_voice_db_development
    ports:
      - 5600:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes: 
      - tone_of_voice_db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/create_tables.sql
  tone_of_voice_cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - 6500:6379
    command: redis-server --save 20 1 --loglevel warning
    volumes: 
      - tone_of_voice_cache:/data
  tone_of_voice_api:
    container_name: tone_of_voice_api-service
    build:
      context: ./
      dockerfile: Dockerfile.dev
    image: tone-of-voice-api
    depends_on:
      tone_of_voice_db:
        condition: service_healthy
      tone_of_voice_cache:
        condition: service_started
    ports:
      - 8200:8200
    environment:
      NODE_ENV: development
      COMPOSE: true
      PORT: 8200
      DATABASE_HOST: tone_of_voice_db
      DATABASE_PORT: 5432
      DATABASE_USERNAME: tone_of_voice_db_dev_user
      DATABASE_PASSWORD: Fd0kjmjYjzAUXx3C
      DATABASE_DATABASE: tone_of_voice_db_development
      REDIS_HOST: tone_of_voice_cache
      REDIS_PORT: 6379
    command: npm run start:dev
    links:
      - tone_of_voice_db
      - tone_of_voice_cache
    volumes:
      - type: bind
        source: ./src
        target: /usr/src/app/src
volumes:
  tone_of_voice_db:
    driver: local
  tone_of_voice_cache:
    driver: local